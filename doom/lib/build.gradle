plugins {
    id "org.jetbrains.kotlin.multiplatform"
}

/**
 * Configure multiplatform project
 */
kotlin {
    jvm("jvm") {
        compilations.all {
            kotlinOptions {
                jvmTarget = globalJavaCompatibility
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation project(":framework")
                implementation "org.kodein.di:kodein-di:$globalKodeinVersion"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
            }
        }
        commonTest {
            dependencies {
                implementation "io.mockk:mockk:$globalMockkVersion"
                implementation "org.jetbrains.kotlin:kotlin-test-common:$globalKotlinVersion"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$globalKotlinVersion"

            }
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:$globalKotlinVersion"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-swing:$globalCoroutinesVersion"
            }
        }
    }

    targets.all {
        compilations.all {
            kotlinOptions {
                allWarningsAsErrors = true
            }
        }
    }
}

/**
 * Log test results
 */
tasks {
    jvmTest {
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}

configurations {
    // https://youtrack.jetbrains.com/issue/KT-27170
    compileClasspath
}

tasks.register("release") {
    group = 'build'
    description = 'Run all the steps to build a release artifact'

    dependsOn ':framework:release'
    dependsOn 'ktlint'
    dependsOn 'build'
    dependsOn 'allTests'
}