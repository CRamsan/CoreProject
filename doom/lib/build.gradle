plugins {
    id "org.jetbrains.kotlin.multiplatform"
}

/**
 * Configure multiplatform project
 */
kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$globalCoroutinesVersion"
            }
        }
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common:$globalKotlinVersion"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$globalCoroutinesVersion"

            }
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:$globalKotlinVersion"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$globalKotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-swing:$globalCoroutinesVersion"
            }
        }
    }

    targets.all {
        compilations.all {
            kotlinOptions {
                allWarningsAsErrors = true
            }
        }
    }

    jvm {
        compilations.each {
            it.kotlinOptions {
                // Setup the Kotlin compiler options for the 'main' compilation:
                jvmTarget = globalJavaCompatibility
            }
        }
    }
}

/**
 * Log test results
 */
tasks {
    jvmTest {
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}