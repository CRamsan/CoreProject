/**
 * Plugin to create a kotlin MPP with safe defaults.
 */
apply plugin: "org.jetbrains.kotlin.multiplatform"

    apply plugin: "com.android.library"
    apply plugin: "kotlin-kapt"

    android {
        compileSdkVersion 33
        defaultConfig {
            minSdkVersion 26
            targetSdkVersion 33
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }

        packaging {
            resources {
                excludes += "/META-INF/**"
            }
        }

        kotlin {
            jvmToolchain(17)
        }

        testOptions {
            unitTests {
                includeAndroidResources = true
                all {
                    testLogging {
                        events "passed", "skipped", "failed"
                    }
                }
            }
        }
    }

    dependencies {
        implementation Kotlin.stdlib.jdk8
        implementation KotlinX.coroutines.core
        implementation KotlinX.coroutines.android

        testImplementation AndroidX.test.core
        testImplementation AndroidX.test.ext.junit
        testImplementation AndroidX.test.ext.junit.ktx
        testImplementation AndroidX.archCore.common
        testImplementation AndroidX.archCore.runtime
        testImplementation AndroidX.archCore.testing
        testImplementation KotlinX.coroutines.test
        testImplementation Testing.junit4
        testImplementation Kotlin.test
        testImplementation Kotlin.test.junit
        testImplementation Testing.mockK
        testImplementation Testing.mockK.android

        androidTestImplementation AndroidX.test.ext.junit
        androidTestImplementation AndroidX.test.ext.junit.ktx
        androidTestImplementation AndroidX.test.core
        androidTestImplementation AndroidX.test.rules
        androidTestImplementation KotlinX.coroutines.test
        androidTestImplementation Testing.junit4
        androidTestImplementation Kotlin.test
        androidTestImplementation Kotlin.test.junit
        androidTestImplementation Testing.mockK.android
        androidTestImplementation Testing.robolectric
    }

kotlin {
    targets.all {
        compilations.all {
            kotlinOptions {
                allWarningsAsErrors = true
                freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
            }
        }
    }

        android() {
            compilations.all {
                kotlinOptions {

                }
            }
        }

        jvm() {
            compilations.all {
                kotlinOptions {
                    jvmTarget = JavaVersion.VERSION_17
                }
            }
        }

        // TODO: This target should be determined at configuration time since it depends on the
        // architecture of the host.
        iosSimulatorArm64("ios") {

        }

        js() {
        }

    sourceSets {
        commonMain {
            dependencies {
                // This syntax is used as the kotlin-mpp plugin does not support
                // arrays as arguments.
                implementation Kotlin.stdlib.common
                implementation KotlinX.coroutines.core
            }
        }
        commonTest {
            dependencies {
                implementation KotlinX.coroutines.test
                implementation Kotlin.test.common
                implementation Kotlin.test.annotationsCommon
            }
        }
            androidMain {
                dependsOn(commonMain)
            }
            androidUnitTest {
                dependsOn(commonTest)
            }
            jvmMain {
                dependsOn(commonMain)
                dependencies {
                    implementation Kotlin.stdlib.jdk8
                    implementation KotlinX.coroutines.core
                }
            jvmTest {
                dependsOn(commonTest)
                dependencies {
                    implementation KotlinX.coroutines.test
                    implementation Testing.junit.jupiter.api
                    implementation Kotlin.test.junit5
                    implementation Testing.mockK

                    runtimeOnly Testing.junit.jupiter.engine
                }
            }
        }
            jsMain {
                dependsOn(commonMain)
                dependencies {
                    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:_"
                }
            }
            jsTest {
                dependsOn(commonTest)
                dependencies {
                    implementation Kotlin.test.js
                    implementation KotlinX.coroutines.test
                }
            }
            iosMain {
                dependsOn(commonMain)
            }
            iosTest {
                dependsOn(commonTest)
            }
    }
}

tasks {
    jvmTest {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}
