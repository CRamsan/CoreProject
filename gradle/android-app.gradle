import static de.fayard.refreshVersions.core.Versions.versionFor

/*
Gradle plugin to create an Android app with good default values.
 */

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt" // Kotlin Annotation Processor
apply plugin: "androidx.navigation.safeargs.kotlin" // Enable  safe-args for Jetpack Navigation
apply plugin: "dagger.hilt.android.plugin"

def composeCompiler = versionFor(project, "version.androidx.compose.compiler")
android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        // Debug settings enabled.
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            kotlinOptions {
                allWarningsAsErrors = true
            }
        }
        // Release build.
        release {
            // Minify is currently disabled. Maybe I should look into enabling this in the future?
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            kotlinOptions {
                allWarningsAsErrors = true
            }
        }
    }
    // Specifies one flavor dimension.
    flavorDimensions "stage"
    productFlavors {
        preprod {
            dimension "stage"
            applicationIdSuffix ".preprod"
            versionNameSuffix "-preprod"
        }
        prod {
            dimension "stage"
        }
    }

    compileOptions {
        // Set the compile options for Java source
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = composeCompiler
    }

    packaging {
        resources {
            excludes += "/META-INF/**"
        }
    }

    kotlin {
        jvmToolchain(17)
    }

    kotlinOptions {
        // Set the compile target for Kotlin source
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            // Allows framework calls to return default values. I should look if I can remove this.
            // Instead we could relly on the testing framework to mock system calls.
            returnDefaultValues = true

            all {
                // Enable printing the result of the unit tests.
                testLogging {
                    events "passed", "skipped", "failed"
                }
            }
        }
    }
}

dependencies {
    kapt Google.dagger.hilt.android.compiler
    kapt Google.dagger.hilt.android.gradlePlugin

    implementation Kotlin.stdlib.jdk8
    implementation KotlinX.coroutines.core
    implementation KotlinX.coroutines.android
    implementation Google.dagger.hilt.android

    testImplementation AndroidX.test.core
    testImplementation AndroidX.test.ext.junit
    testImplementation AndroidX.test.ext.junit.ktx
    testImplementation AndroidX.archCore.common
    testImplementation AndroidX.archCore.runtime
    testImplementation AndroidX.archCore.testing
    testImplementation KotlinX.coroutines.test
    testImplementation Testing.junit4
    testImplementation Kotlin.test
    testImplementation Kotlin.test.junit
    testImplementation Testing.mockK
    testImplementation Testing.mockK.android

    androidTestImplementation AndroidX.test.ext.junit
    androidTestImplementation AndroidX.test.ext.junit.ktx
    androidTestImplementation AndroidX.test.core
    androidTestImplementation AndroidX.test.rules
    androidTestImplementation KotlinX.coroutines.test
    androidTestImplementation Testing.junit4
    androidTestImplementation Kotlin.test
    androidTestImplementation Kotlin.test.junit
    androidTestImplementation Testing.mockK.android
    androidTestImplementation Testing.robolectric
}