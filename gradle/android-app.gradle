import static de.fayard.refreshVersions.core.Versions.versionFor

/*
Gradle plugin to create an Android app with good default values.
 */

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt" // Kotlin Annotation Processor
apply plugin: "com.google.dagger.hilt.android"
apply from: "$rootDir/gradle/detekt.gradle"

def composeCompiler = versionFor(project, "version.androidx.compose.compiler")
android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        // Debug settings enabled.
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        // Release build.
        release {
            // Minify is currently disabled. Maybe I should look into enabling this in the future?
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    // Specifies one flavor dimension.
    flavorDimensions "stage"
    productFlavors {
        preprod {
            dimension "stage"
            applicationIdSuffix ".preprod"
            versionNameSuffix "-preprod"
        }
        prod {
            dimension "stage"
        }
    }

    compileOptions {
        // Set the compile options for Java source
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = composeCompiler
    }

    packaging {
        resources {
            excludes += "/META-INF/**"
        }
    }

    kotlin {
        jvmToolchain(17)
    }

    kotlinOptions {
        // Set the compile target for Kotlin source
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            // Allows framework calls to return default values. I should look if I can remove this.
            // Instead we could relly on the testing framework to mock system calls.
            returnDefaultValues = true

            all {
                // Enable printing the result of the unit tests.
                testLogging {
                    events "passed", "skipped", "failed"
                }
            }
        }
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    kapt "com.google.dagger:hilt-compiler:_"
    kapt "androidx.hilt:hilt-compiler:_"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:_"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:_"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:_"
    implementation "com.google.dagger:hilt-android:_"
    implementation "androidx.hilt:hilt-navigation-compose:_"

    testImplementation "androidx.test:core:_"
    testImplementation "androidx.test.ext:junit:_"
    testImplementation "androidx.test.ext:junit-ktx:_"
    testImplementation "androidx.arch.core:core-common:_"
    testImplementation "androidx.arch.core:core-runtime:_"
    testImplementation "androidx.arch.core:core-testing:_"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:_"
    testImplementation "junit:junit:_"
    testImplementation "org.jetbrains.kotlin:kotlin-test:_"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:_"
    testImplementation "io.mockk:mockk:_"
    testImplementation "io.mockk:mockk-android:_"

    androidTestImplementation "androidx.test.ext:junit:_"
    androidTestImplementation "androidx.test.ext:junit-ktx:_"
    androidTestImplementation "androidx.test:core:_"
    androidTestImplementation "androidx.test:rules:_"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:_"
    androidTestImplementation "junit:junit:_"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:_"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:_"
    androidTestImplementation "io.mockk:mockk-android:_"
    androidTestImplementation "org.robolectric:robolectric:_"
}

tasks.register("releaseAndroid") {
    group = 'release'
    description = 'Run all the steps to build a release artifact'

    dependsOn 'build' // Assembles and test this project
    dependsOn 'detekt' // Run the code analyzer
}

tasks.register("release") {
    group = 'release'
    description = 'Run releaseAndroid'

    dependsOn 'releaseAndroid'
}