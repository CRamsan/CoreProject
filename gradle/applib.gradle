repositories {
    maven {
        // Needed for importing kotlinx-datetime
        url "https://kotlin.bintray.com/kotlinx/"
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt" // Kotlin Annotation Processor
apply from: "$rootDir/gradle/jacoco-android.gradle"

android {
    buildToolsVersion versions_tools.AndroidBuildToolsVersion
    compileSdkVersion versions_tools.CompileSdkVersion

    defaultConfig {
        minSdkVersion versions_tools.MinSdkVersion
        targetSdkVersion versions_tools.TargetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            // Add 'kotlin' as a valid source folder. The default directory is onyl 'src/main/java'.
            java.srcDirs += ['src/main/kotlin']
        }
        test {
            java.srcDirs += ['src/test/kotlin']
        }
        androidTest {
            java.srcDirs += ['src/androidTest/kotlin']
        }
    }

    compileOptions {
        // Set the compile options for Java source
        sourceCompatibility versions_tools.JavaCompatibility
        targetCompatibility versions_tools.JavaCompatibility
    }

    kotlinOptions {
        // Set the compile target for Kotlin source
        jvmTarget = versions_tools.JavaCompatibility
    }

    packagingOptions {
        exclude 'META-INF/**'
        exclude "META-INF/licenses/**"
        exclude "**/attach_hotspot_windows.dll"
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            // Allows framework calls to return default values. I should look if I can remove this.
            // Instead we could relly on the testing framework to mock system calls.
            returnDefaultValues = true

            all {
                // Enable printing the result of the unit tests.
                testLogging {
                    events "passed", "skipped", "failed"
                }
            }
        }
    }
}

dependencies {
    implementation meta_packages.CoreAndroid

    testImplementation meta_packages.CoreTestAndroid

    // This is needed as the new version of Objenesis does not compile on Android<26
    // https://github.com/CRamsan/CoreProject/issues/161
    // The trick was to use old Objenesis as a dependency for instrumented tests and new Objenesis
    // for everything else (JVM/Android unit test).
    /*
    androidTestImplementation (packages.ObjenesisPinned) {
        force = true
    }
     */
    androidTestImplementation meta_packages.CoreAndrodTestAndroid
}

// Register a dependency to a Android library with the `releaseAndroid` task
ext.registerDependency = { project ->
    release.configure { dependsOn("${project}:releaseAndroid") }
}

// Register a dependency to a JVM library with the `releaseJVM` task
ext.registerJvmDependency = { project ->
    release.configure { dependsOn("${project}:releaseJvm") }
}

tasks.register("releaseAndroid") {
    group = 'build'
    description = 'Run all the steps to build a release artifact'

    dependsOn 'ktlint' // Verifies the format
    dependsOn 'build' // Assembles and test this project
    dependsOn 'jacocoAndroidTestReport' // Generate a jacoco report from the unit-test results
}

tasks.register("release") {
    group = 'build'
    description = 'Run releaseAndroid'

    dependsOn 'releaseAndroid'
}
