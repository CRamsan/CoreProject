buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$globalAndroidGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$globalKotlinVersion"
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

android {
    buildToolsVersion globalAndroidBuildToolsVersion
    compileSdkVersion globalCompileSdkVersion
    defaultConfig {
        applicationId "com.cesarandres.ps2link"
        minSdkVersion globalMinSdkVersion
        targetSdkVersion globalTargetSdkVersion
        versionName "5.4.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        stage {
            initWith release
            applicationIdSuffix ".stage"
            matchingFallbacks = ['release']
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    compileOptions {
        sourceCompatibility globalJavaCompatibility
        targetCompatibility globalJavaCompatibility
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = globalJavaCompatibility
        }
    }
}

dependencies {
    implementation project(":framework")

    implementation "com.android.volley:volley:$globalVolleyVersion"
    implementation "com.google.code.gson:gson:$globalGsonVerion"
    implementation "org.ocpsoft.prettytime:prettytime:$globalPrettyTimeVersion"
    implementation "org.twitter4j:twitter4j-core:$globalTwitter4JVersion"
    implementation "androidx.appcompat:appcompat:$globalAndroidXAppCompatersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$globalEspressoVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$globalKotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$globalCoroutinesVersion"

    implementation "org.kodein.di:kodein-di-erased-jvm:$globalKodeinVersion"
    implementation "org.kodein.di:kodein-di-framework-android-x:$globalKodeinVersion"

    implementation "com.microsoft.appcenter:appcenter:$globalAppCenterSdkVersion"

    testImplementation "junit:junit:$globalJUnitVersion"

    androidTestImplementation "androidx.test.ext:junit:$globalAndroidXJUnitVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$globalAndroidXJUnitVersion"
    androidTestImplementation "androidx.test:core:$globalAndroidXTestVersion"
    androidTestImplementation "androidx.test:rules:$globalAndroidXTestVersion"
    androidTestImplementation "androidx.test:runner:$globalAndroidXTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$globalEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$globalEspressoVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$globalUIAutomatorVersion"
    androidTestImplementation "com.microsoft.appcenter:espresso-test-extension:$globalAppCenterEspressoTestExt"
}

tasks.register("release") {
    group = 'build'
    description = 'Run all the steps to build a release artifact'

    dependsOn ':framework:release'
    dependsOn 'ktlint'
    dependsOn 'build'
    dependsOn 'test'
    dependsOn 'assembleAndroidTest'
}