apply plugin: "com.android.application"
apply from: "$rootDir/gradle/app.gradle"

android {
    defaultConfig {
        applicationId "com.cesarandres.ps2link"
        versionName "5.6.4"

        def consumerSecret = findProperty("ps2linkConsumerSecret") ?: ""
        def consumerKey = findProperty("ps2linkConsumerKey") ?: ""
        def accessToken = findProperty("ps2linkAccessToken") ?: ""
        def accessTokenSecret = findProperty("ps2linkAccessTokenSecret") ?: ""
        def appCenterIdPreProd = findProperty("ps2linkAppCenterIdPreProd") ?: ""
        def appCenterIdProd = findProperty("ps2linkAppCenterIdProd") ?: ""
        def serviceIdPreProd = findProperty("ps2linkServiceIdPreProd") ?: ""
        def serviceIdProd = findProperty("ps2linkServiceIdProd") ?: ""
        def awsAccessKeyPreProd = findProperty("ps2linkAwsAccessKeyPreProd") ?: ""
        def awsSecretKeyPreProd = findProperty("ps2linkAwsSecretKeyPreProd") ?: ""
        def awsAccessKeyProd = findProperty("ps2linkAwsAccessKeyProd") ?: ""
        def awsSecretKeyProd = findProperty("ps2linkAwsSecretKeyProd") ?: ""

        buildConfigField("String", "CONSUMER_SECRET", "\"${consumerSecret}\"")
        buildConfigField("String", "CONSUMER_KEY", "\"${consumerKey}\"")
        buildConfigField("String", "ACCESS_TOKEN", "\"${accessToken}\"")
        buildConfigField("String", "ACCESS_TOKEN_SECRET", "\"${accessTokenSecret}\"")

        productFlavors {
            preprod {
                buildConfigField("String", "APP_CENTER_ID", "\"${appCenterIdPreProd}\"")
                buildConfigField("String", "CENSUS_SERVICE_ID", "\"${serviceIdPreProd}\"")
                resValue("string", "aws_access_key", "${awsAccessKeyPreProd}")
                resValue("string", "aws_secret_key", "${awsSecretKeyPreProd}")
            }
            prod {
                buildConfigField("String", "APP_CENTER_ID", "\"${appCenterIdProd}\"")
                buildConfigField("String", "CENSUS_SERVICE_ID", "\"${serviceIdProd}\"")
                resValue("string", "aws_access_key", "${awsAccessKeyProd}")
                resValue("string", "aws_secret_key", "${awsSecretKeyProd}")
            }
        }
    }

    packagingOptions {
        exclude 'software/amazon/awssdk/global/handlers/execution.interceptors'
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    kotlinOptions {
        useIR = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion versions_tools.JetpackCompose
    }
}

dependencies {
    implementation project(":framework")
    implementation project(":auraxiscontrolcenter:appcore")
    implementation project(":auraxiscontrolcenter:core-models")
    implementation project(":auraxiscontrolcenter:ui")

    implementation packages.AndroidXAppCompat
    implementation packages.AndroidxActivityKtx
    implementation packages.AndroidxFragmentKtx
    implementation packages.AndroidXLifecycleLiveDataKtx
    implementation packages.AndroidXLifecycleViewModelKtx
    implementation packages.AndroidXLifecycleRuntimeKtx
    implementation packages.AndroidXPagingRuntimeKtx
    implementation packages.AndroidXRecyclerView
    implementation packages.AndroidXPreferences
    implementation packages.AndroidXPreferencesKtx
    implementation packages.AndroidXNavigationFragmentKtx
    implementation packages.AndroidXNavigationUIKtx
    implementation packages.AndroidXWorkManagerRuntimeKtx
    implementation packages.AndroidXWorkManagerRuntime
    implementation packages.AndroidMaterial
    implementation packages.ConstraintLayout
    implementation packages.EspressoIdlingResource
    implementation packages.JetpackComposeUI
    implementation packages.JetpackComposeTooling
    implementation packages.JetpackComposeFoundation
    implementation packages.JetpackComposeMaterial
    implementation packages.JetpackComposeIconsCore
    implementation packages.JetpackComposeIconsExtended
    implementation packages.JetpackComposeRuntimeLiveData
    implementation packages.KotlinxDatetime
    implementation packages.KotlinxSerialization
    implementation packages.AppCenterSdk
    implementation packages.KtorAndroid
    implementation packages.PrettyTime
    implementation packages.SqlDelightAndroidDriver

    testImplementation project(":framework:test")

    androidTestImplementation packages.AndroidXTestRunner
    androidTestImplementation packages.EspressoIntents
    androidTestImplementation packages.Espresso
    androidTestImplementation packages.UIAutomator
    androidTestImplementation packages.AppCenterEspressoTestExt
}

registerDependency(":framework")
registerDependency(":auraxiscontrolcenter:appcore")
registerDependency(":auraxiscontrolcenter:core-models")
registerDependency(":auraxiscontrolcenter:ui")
