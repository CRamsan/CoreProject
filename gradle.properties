# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx4096M
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Enable the hierarchy structure support to share code across targets
# https://kotlinlang.org/docs/mpp-share-on-platforms.html#share-code-on-similar-platforms
kotlin.mpp.enableGranularSourceSetsMetadata=true
# The instruction binaries.executable() explicitly instructs the Kotlin compiler to emit executable .js files.
# This is the default behavior when using the current Kotlin/JS compiler, but the instruction is explicitly
# required if you are working with the Kotlin/JS IR compiler, or have set kotlin.js.generate.executable.default=false.
# https://kotlinlang.org/docs/js-project-setup.html#webpack-configuration-file
kotlin.js.generate.executable.default=false

# https://youtrack.jetbrains.com/issue/KT-47416
# https://github.com/google/dagger/issues/2684
# This workaround is needed to be able to use hilt with Kotlin 1.5.20.
# on 1.5.30 we will be able to remove this flag
kapt.use.worker.api=false

# We need this to automatically generate external declarations for kotlin/js interop.
# This feature is still experimental and it causes problems with the IDEs. So we need to
# be careful of it's usage. For now I recommend we generate the dependencies manually.
# https://github.com/Kotlin/dukat
# https://kotlinlang.org/docs/js-external-declarations-with-dukat.html#generate-external-declarations-at-build-time
kotlin.js.experimental.externals=false