# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# specific path build
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - petproject/*
    - framework/*
    - build.gradle
    - gradle.properties
    - settings.gradle

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'petproject:azurefunction:release'
- task: CopyFiles@2
  inputs:
    SourceFolder: $(system.defaultworkingdirectory)/petproject/azurefunction/build/azure-functions/
    Contents: '**'
    targetFolder: $(build.artifactStagingDirectory)
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
- task: AzureFunctionApp@1
  inputs:
    azureSubscription: 'Pay-As-You-Go(7b2a465a-dd34-46f3-acb4-13737ce32fd4)'
    appType: 'functionApp'
    appName: 'petproject-api'
    package: $(build.artifactstagingdirectory)/petproject-api/
    deploymentMethod: 'auto'