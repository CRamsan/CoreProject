# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# specific path build
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - kotlinlibs/common/*
    - kotlinlibs/server-jvm/*
    - framework/*
    - build.gradle
    - gradle.properties
    - settings.gradle
    - gradle/*

pool:
  name: 'Default'

steps:
- template: ../../cicd-templates/configure-local-jdk.yml
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'kotlinlibs:server-jvm:release'

- task: CopyFiles@2
  inputs:
    SourceFolder: $(system.defaultworkingdirectory)/kotlinlibs/server-jvm/build/libs/
    Contents: '**'
    targetFolder: $(build.artifactStagingDirectory)

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)