apply from: "$rootDir/gradle/kotlin-jvm-lib.gradle"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-allopen"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "kotlin-kapt" // Kotlin Annotation Processor
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    kapt Spring.boot.configurationProcessor

    implementation project(":framework:test")
    implementation project(":kotlinlibs:common")
    implementation project(":kotlinlibs:spring-common")

    implementation "com.amazonaws:aws-lambda-java-core:_"
    implementation "com.amazonaws:aws-lambda-java-events:_"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:_"
    implementation "org.jetbrains.kotlin:kotlin-reflect:_"
    implementation KotlinX.datetime
    implementation KotlinX.serialization.json
    implementation "com.rometools:rome:_"
    implementation "org.springframework.cloud:spring-cloud-function-adapter-aws:_"
    implementation Spring.boot.data.mongodb
    implementation "org.springframework.cloud:spring-cloud-starter-function-webflux:_"
    implementation Spring.boot.web

    runtimeOnly Spring.boot.devTools

    testImplementation Spring.boot.test
    testImplementation "com.ninja-squad:springmockk:_"
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*
shadowJar {
    archiveClassifier = 'aws'
    dependencies {
        exclude(
            dependency(Spring.cloud.function_web)
        )
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

test {
    useJUnitPlatform()
}

releaseJvm {
    dependsOn 'shadowJar'
}

registerDependency(":framework:test")
registerDependency(":kotlinlibs:common")
registerDependency(":kotlinlibs:spring-common")
