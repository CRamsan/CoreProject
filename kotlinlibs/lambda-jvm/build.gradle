apply from: "$rootDir/gradle/kotlin-jvm-lib.gradle"
apply plugin: "org.springframework.boot"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-allopen"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "kotlin-kapt" // Kotlin Annotation Processor
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    kapt packages.SpringConfiguratorProcessor

    implementation project(":framework:test")
    implementation project(":kotlinlibs:common")
    implementation project(":kotlinlibs:spring-common")

    implementation packages.AwsLambda
    implementation packages.AwsLambdaEvents
    implementation packages.JacksonKotlin
    implementation packages.KotlinReflect
    implementation packages.KotlinxDatetime
    implementation packages.KotlinxSerialization
    implementation packages.Rome
    implementation packages.SpringCloudFunctionAWS
    implementation packages.SpringWebFunctionFlux
    implementation packages.SpringWeb

    runtimeOnly packages.H2DatabaseEngine
    runtimeOnly packages.SpringDevtools

    testImplementation packages.SpringTest
    testImplementation packages.SpringMock
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*
shadowJar {
    classifier = 'aws'
    dependencies {
        exclude(
            dependency(packages.SpringCloudFunctionWebSupport))
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

test {
    useJUnitPlatform()
}

releaseJvm {
    dependsOn 'shadowJar'
}

registerDependency(":framework:test")
registerDependency(":kotlinlibs:common")
registerDependency(":kotlinlibs:spring-common")
