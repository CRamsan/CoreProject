//Define the version variables to be used across the entire project
buildscript {
    ext {
        globalAndroidBuildToolsVersion = "29.0.2"
        globalCompileSdkVersion = 29
        globalMinSdkVersion = 22
        globalTargetSdkVersion = 29

        globalJavaCompatibility = JavaVersion.VERSION_1_8

        globalAndroidGradlePluginVersion = "4.0.1"
        globalAndroidMaterialVersion = "1.1.0"
        globalAndroidXAppCompatersion = "1.2.0"
        globalAndroidXJUnitVersion = "1.1.1"
        globalAndroidXTestVersion = "1.2.0"
        globalAndroidXLifecycleVersion = "2.2.0"
        globalAndroidXRecyclerViewVersion = "1.1.0"
        globalAndroidXPagingVersion = "2.1.2"
        globalAndroidXPreferencesVersion = "1.1.1"
        globalAndroidxActivityKtxVersion = "1.1.0"
        globalAndroidxFragmentKtxVersion = "1.2.5"
        globalAndroidXWorkManager = "2.4.0"
        globalAppCenterSdkVersion = "3.3.0"
        globalAppCenterEspressoTestExt = "1.4"
        globalAzureFunctionGradlePlugin = "1.4.0"
        globalAzureFunctionsJavaLibrary = "1.3.1"
        globalCoroutinesVersion = "1.3.8"
        globalConstraintLayoutVersion = "1.1.3"
        globalEspressoVersion = "3.2.0"
        globalFirebaseVersion = "17.2.3"
        globalFirebaseCrashlyticsVersion = "2.0.0-beta02"
        globalGlideVersion = "4.11.0"
        globalGsonVerion = "2.8.6"
        globalGMSServices = "4.3.3"
        globalHamcrestVersion = "2.2"
        globalMockitoVersion = "3.4.6"
        globalJacksonDatabinding = "2.11.2"
        globalJUnitVersion = "4.13"
        globalKodeinVersion = "7.0.0"
        globalKotlinVersion = initKotlinVersion
        globalKtlintVerion = "0.37.2"
        globalKtorVersion = "1.3.1"
        globalMockkVersion = "1.10.0"
        globalOkhttpVersion = "4.8.1"
        globalPrettyTimeVersion = "4.0.5.Final"
        globalRobolectricVersion = "4.3.1"
        globalSpringFrameworkVersion = "2.3.2.RELEASE"
        globalSpringDependencyManagement = "1.0.9.RELEASE"
        globalSqlDelightVersion = "1.3.0"
        globalTwitter4JVersion = "4.0.7"
        globalUIAutomatorVersion = "2.2.0"
        globalVolleyVersion = "1.1.1"

        globalGdxVersion = '1.9.11'
        globalRoboVMVersion = '2.3.9'
        globalBox2DLightsVersion = '1.4'
        globalAshleyVersion = '1.7.0'
        globalAiVersion = '1.8.0'
    }

    buildscript {
        repositories {
            google()
            jcenter()
            mavenCentral()
        }
    }
}

// Apply the versions plugin at the root project as it is capable 
// to traverse the submodules 
plugins {
    id "com.github.ben-manes.versions"
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    // Example 1: reject all non stable versions
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

subprojects {

    // Configure the ktlint tasks for each individual subproject
    configurations {
        ktlint
    }

    dependencies {
        ktlint "com.pinterest:ktlint:${globalKtlintVerion}"
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    task("ktlint", type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/checkstyle-result.xml", "${project.projectDir}/src/**/*.kt"
    }

    task("ktlintFormat", type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "${project.projectDir}/src/**/*.kt"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.register("release") {
    group = 'build'
    description = 'Run all the steps to build all release artifact'

    // List all build targets
    dependsOn ':petproject:app:release'
    dependsOn ':petproject:webservice:release'
    dependsOn ':petproject:azurefunction:release'
    dependsOn ':auraxiscontrolcenter:release'
}