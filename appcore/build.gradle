buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.squareup.sqldelight:gradle-plugin:$globalSqlDelightVersion"
    }
}

plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.multiplatform"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.android.extensions"
    id "io.gitlab.arturbosch.detekt"
}

apply plugin: "com.squareup.sqldelight"

sqldelight {
    PetProjectDB {
        packageName = "com.cramsan.petproject.db"
    }
}

android {
    compileSdkVersion globalCompileSdkVersion
    defaultConfig {
        minSdkVersion globalMinSdkVersion
        targetSdkVersion globalTargetSdkVersion
        versionCode globalVersionCode
        versionName globalVersionName
    }
    compileOptions {
        sourceCompatibility globalJavaCompatibility
        targetCompatibility globalJavaCompatibility
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                testLogging {
                    events "passed", "skipped", "failed"
                }
            }
        }
    }
}

dependencies {
    implementation "com.squareup.sqldelight:android-driver:$globalSqlDelightVersion"

    testImplementation "androidx.test.ext:junit-ktx:$globalAndroidXJUnitVersion"
    testImplementation "com.squareup.sqldelight:android-driver:$globalSqlDelightVersion"
    testImplementation "io.mockk:mockk:$globalMockkVersion"
    testImplementation "junit:junit:$globalJUnitVersion"
    testImplementation "org.robolectric:robolectric:$globalRobolectricVersion"
}

detekt {
    toolVersion = "$globalDetektVersion"
    input = files("src/main/java", "src/test/java", "src/androidTest/java",
                  "src/commonMain/", "src/commonTest",
                  "src/iosMain/", "src/iosTest")
    filters = ".*_/resources/.*,.*_/build/.*"
    config = files("detekt-config.yml")
}


kotlin {
    android("android") {
    }
    jvm("jvm") {
    }
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        binaries {
            framework()
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$globalCoroutinesVersion"
                implementation project(":framework")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
                implementation "io.mockk:mockk-common:$globalMockkVersion"
                implementation "org.kodein.di:kodein-di-core:$globalKodeinVersion"
                implementation "org.kodein.di:kodein-di-erased:$globalKodeinVersion"
                implementation project(":framework")
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin("stdlib-jdk8")
                implementation "com.squareup.sqldelight:sqlite-driver:$globalSqlDelightVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation "io.mockk:mockk:$globalMockkVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$globalCoroutinesVersion"
                implementation "org.kodein.di:kodein-di-erased-jvm:$globalKodeinVersion"
            }
        }
        androidMain {
            dependencies {
                implementation kotlin("stdlib-jdk8")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$globalCoroutinesVersion"
            }
        }
        androidTest {
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$globalCoroutinesVersion"
            }
        }
        iosMain {
            dependencies {
            }
        }
        iosTest {
            dependencies {
            }
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

check.dependsOn ktlint

configurations {
    // Workaround for https://youtrack.jetbrains.com/issue/KT-27170
    compileClasspath
}
